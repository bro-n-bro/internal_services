"use strict";(self["webpackChunkinternal_services"]=self["webpackChunkinternal_services"]||[]).push([[456],{66951:function(e,n,a){a.d(n,{A:function(){return k}});var t=a(56768);const s={class:"loader_wrap"},c=(0,t.Lk)("div",{class:"loader"},[(0,t.Lk)("span")],-1),l=[c];function i(e,n){return(0,t.uX)(),(0,t.CE)("div",s,l)}var r=a(71241);const o={},u=(0,r.A)(o,[["render",i]]);var k=u},21456:function(e,n,a){a.r(n),a.d(n,{default:function(){return U}});a(44114);var t=a(56768),s=a(24232),c=a(90144),l=a(43189),i=a(28609),r=a(61981),o=a(66951),u=a(45130),k=a(24113),v=a(38326);const d=k+"#ic_arr_ver",_=k+"#ic_check",h={class:"logo"},p=["src"],L={class:"name"},w={class:"token"},f=(0,t.Lk)("svg",{class:"arr"},[(0,t.Lk)("use",{"xlink:href":d})],-1),m={class:"mini_modal"},C={class:"scroll"},R={class:"logo"},b=["src"],g={class:"name"},y={class:"token"},E=(0,t.Lk)("svg",{class:"icon"},[(0,t.Lk)("use",{"xlink:href":_})],-1);var X={__name:"ChooseNetwork",setup(e){const n=(0,l.o)(),a=(0,c.KR)(!1),i=(0,c.KR)(null);return(0,v.X2F)(i,(e=>a.value=!1)),(e,l)=>{const o=(0,t.g2)("router-link");return(0,t.uX)(),(0,t.CE)("div",{class:"choose_network",ref_key:"target",ref:i},[(0,t.Lk)("button",{class:"btn",onClick:l[0]||(l[0]=(0,u.D$)((e=>a.value=!a.value),["prevent"]))},[(0,t.Lk)("div",h,[(0,t.Lk)("img",{src:(0,c.R1)(r.oB)((0,c.R1)(n).networks[(0,c.R1)(n).currentNetwork].chainId),alt:""},null,8,p)]),(0,t.Lk)("div",null,[(0,t.Lk)("div",L,(0,s.v_)((0,c.R1)(n).networks[(0,c.R1)(n).currentNetwork].name),1),(0,t.Lk)("div",w,(0,s.v_)((0,c.R1)(n).networks[(0,c.R1)(n).currentNetwork].token_name),1)]),f]),(0,t.bo)((0,t.Lk)("div",m,[(0,t.Lk)("div",C,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,c.R1)(n).networks,((e,i)=>((0,t.uX)(),(0,t.CE)("div",{key:i},[(0,t.bF)(o,{class:(0,s.C4)(["network",{active:(0,c.R1)(n).currentNetwork==e.alias}]),to:`/ibc_route/${e.alias}`,onClick:l[1]||(l[1]=e=>a.value=!a.value)},{default:(0,t.k6)((()=>[(0,t.Lk)("div",R,[(0,t.Lk)("img",{src:(0,c.R1)(r.oB)(e.chainId),alt:""},null,8,b)]),(0,t.Lk)("div",null,[(0,t.Lk)("div",g,(0,s.v_)(e.name),1),(0,t.Lk)("div",y,(0,s.v_)(e.token_name),1)]),E])),_:2},1032,["class","to"])])))),128))])],512),[[u.aG,a.value]])],512)}}};const N=X;var K=N;const F=e=>((0,t.Qi)("data-v-2e24f25c"),e=e(),(0,t.jt)(),e),I={class:"page_head"},$={class:"page_title"},A={class:"list"},B={class:"denom"},j={class:"path"},x=F((()=>(0,t.Lk)("div",{class:"label"},"Path: ",-1))),Q={class:"val"},W={class:"return_path"},D=F((()=>(0,t.Lk)("div",{class:"title"},"Return path",-1))),G={key:0},O={key:1,class:"row"},P=F((()=>(0,t.Lk)("div",{class:"label"},"Chain name:",-1))),q={class:"val"},z={key:0},H=F((()=>(0,t.Lk)("div",{class:"label"},"Channel status:",-1))),J={class:"val"};var M={__name:"IBCRoute",setup(e){const n=(0,l.o)(),a=(0,c.KR)(!0);function u(){n.balances.forEach((async e=>{if(e.return_path=[],e.denom_traces.path){e.return_path.push({chain_name:n.networks[n.currentNetwork].name});for(const a of e.denom_traces.path.match(/transfer\/channel-\d+/g)){let t={path:a,channel:a.split("/")[1]};await fetch(`${n.networks[n.currentNetwork].lcd_api}/ibc/core/channel/v1/channels/${t.channel}/ports/transfer`).then((e=>e.json())).then((e=>{t.connection=e.channel.connection_hops[0],t.status=e.channel.state})),await fetch(`${n.networks[n.currentNetwork].lcd_api}/ibc/core/connection/v1/connections/${t.connection}/client_state`).then((e=>e.json())).then((e=>t.chain_id=e.identified_client_state.client_state.chain_id));let s=i.Bt.find((e=>e.chain_id===t.chain_id));t.chain_name=s?s.pretty_name:"Not definitely",e.return_path.push(t)}}}))}return(0,t.KC)((async()=>{n.isKeplrConnected||await n.initApp(),await u(),a.value=!1})),(0,t.wB)((0,t.EW)((()=>n.currentNetwork)),(async()=>{a.value=!0,await n.initApp(),await u(),a.value=!1})),(e,l)=>a.value?((0,t.uX)(),(0,t.Wv)(o.A,{key:0})):((0,t.uX)(),(0,t.CE)(t.FK,{key:1},[(0,t.Lk)("div",I,[(0,t.Lk)("div",$,(0,s.v_)(e.$t("message.ibc_route_page_title")),1),(0,t.bF)(K)]),(0,t.Lk)("div",A,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,c.R1)(n).balances,((e,n)=>((0,t.uX)(),(0,t.CE)("div",{class:"item",key:n},[(0,t.Lk)("div",B,(0,s.v_)((0,c.R1)(r.mO)(e.denom)),1),(0,t.Lk)("div",j,[x,(0,t.Lk)("div",Q,(0,s.v_)(e.denom_traces.path),1)]),(0,t.Lk)("div",W,[D,e.return_path.length?((0,t.uX)(),(0,t.CE)("div",O,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(e.return_path,((e,n)=>((0,t.uX)(),(0,t.CE)("div",{key:n},[(0,t.Lk)("div",null,[P,(0,t.Lk)("div",q,(0,s.v_)(e.chain_name),1)]),e.status?((0,t.uX)(),(0,t.CE)("div",z,[H,(0,t.Lk)("div",J,(0,s.v_)(e.status),1)])):(0,t.Q3)("",!0)])))),128))])):((0,t.uX)(),(0,t.CE)("div",G," No need, it's a native token. "))])])))),128))])],64))}},S=a(71241);const T=(0,S.A)(M,[["__scopeId","data-v-2e24f25c"]]);var U=T}}]);
//# sourceMappingURL=456.0f7bf74e.js.map