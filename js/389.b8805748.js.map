{"version":3,"file":"js/389.b8805748.js","mappings":"0LACSA,MAAM,e,GACPC,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,UAAQ,EAACC,EAAAA,EAAAA,IAAa,a,GAAjCC,G,kCADJC,EAAAA,EAAAA,IAEM,MAFNC,EADJC,E,gBCCA,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,kmCC0GI,MAAMC,GAAQC,EAAAA,EAAAA,KACVC,GAAQC,EAAAA,EAAAA,MACRC,GAAUC,EAAAA,EAAAA,KAAI,IACd,KAAEC,EAAI,YAAEC,IAAgBC,EAAAA,EAAAA,OAwC5BC,eAAeC,IACXV,EAAMW,SAASC,SAAQH,UAInB,GAFAI,EAAQC,YAAc,GAElBD,EAAQE,aAAaC,KAAM,CAE3BH,EAAQC,YAAYG,KAAK,CACrBC,WAAYlB,EAAMmB,SAASC,IAAIpB,EAAMqB,wBAAwBC,OAGjE,IAAK,MAAMC,KAAQV,EAAQE,aAAaC,KAAKQ,MAAM,0BAA2B,CAC1E,IAAIC,EAAO,CACPT,KAAMO,EACNG,QAASH,EAAKI,MAAM,KAAK,UAIvBC,MAAO,GAAE5B,EAAMmB,SAASC,IAAIpB,EAAMqB,wBAAwBQ,wCAAwCJ,EAAKC,0BACxGI,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFR,EAAKS,WAAaD,EAAOP,QAAQS,gBAAgB,GAEjDV,EAAKW,OAAS,UAAU,UAI1BR,MAAO,GAAE5B,EAAMmB,SAASC,IAAIpB,EAAMqB,wBAAwBQ,8CAA8CJ,EAAKS,2BAC9GJ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAUR,EAAKY,SAAWJ,EAAOK,wBAAwBC,aAAaF,WAGhF,IAAIG,EAAYC,EAAAA,GAAOC,MAAKC,GAAMA,EAAGN,WAAaZ,EAAKY,WAEvDZ,EAAKP,WAAasB,EAAYA,EAAUI,YAAc,KAGtD/B,EAAQC,YAAYG,KAAKQ,EAC7B,CACJ,IAER,C,OA9EAoB,EAAAA,EAAAA,KAAcpC,UAEVT,EAAM8C,eAAiB5C,EAAMoB,KAG7BtB,EAAMqB,uBAAyBnB,EAAM6C,OAAOC,cAGtChD,EAAMiD,QAAQjD,EAAMqB,8BAGpBX,IAGNN,EAAQ8C,OAAQ,CAAK,KAIzBC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAAS,IAAMpD,EAAMqD,kBAAiB5C,UAExCL,EAAQ8C,OAAQ,EAGhBlD,EAAMqB,uBAAyBnB,EAAM6C,OAAOC,cAGtChD,EAAMiD,QAAQjD,EAAMqB,8BAGpBX,IAGNN,EAAQ8C,OAAQ,CAAK,I,ulEClJ7B,MAAMpD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://internal_services/./src/components/Loader.vue","webpack://internal_services/./src/components/Loader.vue?b8fd","webpack://internal_services/./src/views/IBCRoute.vue","webpack://internal_services/./src/views/IBCRoute.vue?dac6"],"sourcesContent":["<template>\n    <div class=\"loader_wrap\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        background: rgba(0, 0, 0, .65);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=733e33a2\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=733e33a2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <Loader v-if=\"loading\" />\n\n    <template v-else>\n    <!-- <pre>{{ store.balances }}</pre> -->\n\n    <div class=\"list\" v-if=\"store.balances.length\">\n        <div class=\"item\" v-for=\"(balance, index) in store.balances\" :key=\"index\">\n            <div class=\"head\">\n                <div class=\"logo\">\n                    <img :src=\"getNetworkLogo(balance.chain_id)\" alt=\"\">\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"formatTokenAmount(balance.amount, balance.base_denom) < 0.01\">\n                    &lt; 0.01\n                    </template>\n\n                    <template v-else>\n                    {{ $filters.toFixed(formatTokenAmount(balance.amount, balance.base_denom), 2) }}\n                    </template>\n                </div>\n\n                <div class=\"denom\">{{ formatTokenName(balance.denom) }}</div>\n            </div>\n\n            <div class=\"data\">\n                <div class=\"return_path\">\n                    <div class=\"title\">\n                        {{ $t('message.ibc_route_return_path_label', { count: balance.return_path.length }) }}\n                    </div>\n\n                    <div v-if=\"!balance.return_path.length\">\n                        {{ $t('message.ibc_route_return_path_no_need') }}\n                    </div>\n\n                    <div class=\"list\" v-else>\n                        <div class=\"item\" v-for=\"(item, itemIndex) in balance.return_path\" :key=\"itemIndex\">\n                            <div class=\"number\"></div>\n\n                            <div class=\"label\">\n                                {{ $t('message.ibc_route_return_path_chain_name_label') }}\n                            </div>\n\n                            <div class=\"chain\">\n                                <div class=\"logo\">\n                                    <!-- <img :src=\"getNetworkLogo(item.chain_id)\" alt=\"\"> -->\n                                </div>\n\n                                <!-- <span>{{ item.chainFrom.chain_name }}</span> -->\n                            </div>\n\n                            <div class=\"arrow\">\n                                <svg><use xlink:href=\"@/assets/sprite.svg#ic_way\"></use></svg>\n                            </div>\n\n                            <div class=\"chain\">\n                                <div class=\"logo\">\n                                    <!-- <img :src=\"getNetworkLogo(item.chain_id)\" alt=\"\"> -->\n                                </div>\n\n                                <!-- <span>{{ item.chainTo.chain_name }}</span> -->\n                            </div>\n\n                            <div class=\"status\">\n                                <span v-if=\"item.status === 'verified'\" class=\"green\">{{ $t('message.ibc_route_return_path_status_verified') }}</span>\n                                <span v-if=\"item.status === 'broken'\" class=\"yellow\">{{ $t('message.ibc_route_return_path_status_broken') }}</span>\n                                <span v-if=\"item.status === 'expired'\" class=\"red\">{{ $t('message.ibc_route_return_path_status_expired') }}</span>\n                            </div>\n\n                            <button class=\"send_btn\" :disabled=\"item.status != 'verified'\">\n                                {{ $t('message.btn_send') }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"path\">\n                    <div class=\"label\">\n                        {{ $t('message.ibc_route_path_label') }}\n                    </div>\n\n                    <div class=\"val\">\n                        <span>{{ balance.denom_traces.path }}</span>\n\n                        <button class=\"copy_btn\" @click.prevent=\"copy(balance.denom_traces.path)\" v-if=\"isSupported\">\n                            <img src=\"@/assets/ic_copy.svg\" alt=\"\">\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"empty\" v-else>\n        {{ $t('message.ibc_route_empty_title') }}\n    </div>\n    </template>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount, watch, computed } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useRoute } from 'vue-router'\n    import { chains } from 'chain-registry'\n    import { useClipboard } from '@vueuse/core'\n    import { formatTokenAmount, formatTokenName, getNetworkLogo } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const store = useGlobalStore(),\n        route = useRoute(),\n        loading = ref(true),\n        { copy, isSupported } = useClipboard()\n\n\n    onBeforeMount(async () => {\n        // Set current service\n        store.currentService = route.name\n\n        // Set current multisend network\n        store.IBCRouteCurrentNetwork = route.params.network\n\n        // Init APP\n        await store.initApp(store.IBCRouteCurrentNetwork)\n\n        // Get paths\n        await getPaths()\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    watch(computed(() => store.currentNetwork), async () => {\n        // Show loader\n        loading.value = true\n\n        // Set current multisend network\n        store.IBCRouteCurrentNetwork = route.params.network\n\n        // Init APP\n        await store.initApp(store.IBCRouteCurrentNetwork)\n\n        // Get paths\n        await getPaths()\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    // Get paths\n    async function getPaths() {\n        store.balances.forEach(async balance => {\n            // Return path\n            balance.return_path = []\n\n            if (balance.denom_traces.path) {\n                // Set default network\n                balance.return_path.push({\n                    chain_name: store.networks.IBC[store.IBCRouteCurrentNetwork].name,\n                })\n\n                for (const item of balance.denom_traces.path.match(/transfer\\/channel-\\d+/g)) {\n                    let data = {\n                        path: item,\n                        channel: item.split('/')[1]\n                    }\n\n                    // Get connection\n                    await fetch(`${store.networks.IBC[store.IBCRouteCurrentNetwork].lcd_api}/ibc/core/channel/v1/channels/${data.channel}/ports/transfer`)\n                        .then(response => response.json())\n                        .then(result => {\n                            data.connection = result.channel.connection_hops[0]\n                            // data.status = result.channel.state\n                            data.status = 'verified'\n                        })\n\n                    // Get chain id\n                    await fetch(`${store.networks.IBC[store.IBCRouteCurrentNetwork].lcd_api}/ibc/core/connection/v1/connections/${data.connection}/client_state`)\n                        .then(response => response.json())\n                        .then(result => data.chain_id = result.identified_client_state.client_state.chain_id)\n\n                    // Get chain name\n                    let chainName = chains.find(el => el.chain_id === data.chain_id)\n\n                    data.chain_name = chainName ? chainName.pretty_name : null\n\n                    // Set data\n                    balance.return_path.push(data)\n                }\n            }\n        })\n    }\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        width: 796px;\n        max-width: 100%;\n        padding: 40px;\n\n        background: none;\n    }\n\n\n\n    .list\n    {\n        width: 796px;\n        max-width: 100%;\n    }\n\n\n\n    .item\n    {\n        border: 1px solid #915cd4;\n        border-radius: 30px;\n        background: radial-gradient(82.21% 105.43% at 50% 13.3%, rgba(71, 26, 146, .70) 0%, rgba(35, 6, 83, .70) 63.74%, rgba(0, 0, 0, .70) 100%), linear-gradient(132deg, #8f00b0 -12.79%, #570099 45.8%, #1b0044 99.42%);\n    }\n\n\n    .item + .item\n    {\n        margin-top: 20px;\n    }\n\n\n    .item .head\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding: 18px 20px;\n\n        text-transform: uppercase;\n    }\n\n\n    .item .head .logo\n    {\n        width: 32px;\n        height: 32px;\n        margin-right: 10px;\n    }\n\n\n    .item .head .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n\n    .item .head .denom\n    {\n        margin-left: 4px;\n    }\n\n\n    .item .data\n    {\n        padding: 0 20px 20px;\n    }\n\n\n    .item .path\n    {\n        margin-top: 20px;\n        padding: 10px 20px;\n\n        border-radius: 20px;\n        background: linear-gradient(180deg, #cca3ff 0%, #9d4cff 100%);\n    }\n\n\n    .item .path .label\n    {\n        font-size: 20px;\n        font-weight: 600;\n        line-height: 100%;\n\n        color: #6114bf;\n    }\n\n\n    .item .path .val\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n    }\n\n\n    .item .path .val span\n    {\n        font-weight: 500;\n\n        display: block;\n        overflow: hidden;\n\n        width: calc(100% - 40px);\n\n        white-space: nowrap;\n        text-decoration: underline;\n        text-overflow: ellipsis;\n    }\n\n\n    .item .path .copy_btn\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 20px;\n        height: 20px;\n        margin-left: auto;\n    }\n\n\n    .item .path .copy_btn .icon\n    {\n        display: block;\n\n        width: 14px;\n        height: 17px;\n    }\n\n\n    .item .return_path .title\n    {\n        font-size: 20px;\n        font-weight: 600;\n\n        margin-bottom: 6px;\n        padding: 0 20px;\n    }\n\n\n    .item .return_path .list\n    {\n        width: calc(100% + 20px);\n        margin: 0 -10px;\n        padding: 8px;\n\n        counter-reset: number;\n\n        border: 2px solid #c986ff;\n        border-radius: 20px;\n        background: #131313;\n    }\n\n\n    .item .return_path .item\n    {\n        font-size: 18px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding: 10px;\n\n        border-radius: 11px;\n        background: linear-gradient(129deg, #a42dff 27.86%, #410094 92.64%), #fff;\n    }\n\n    .item .return_path .item + .item\n    {\n        margin-top: 6px;\n    }\n\n\n    .item .return_path .item > * + *\n    {\n        margin-left: 10px;\n    }\n\n\n    .item .return_path .number\n    {\n        width: 20px;\n\n        white-space: nowrap;\n    }\n\n\n    .item .return_path .number:before\n    {\n        content: counter(number) '.';\n        counter-increment: number;\n    }\n\n\n    .item .return_path .label\n    {\n        margin-right: 10px;\n    }\n\n\n    .item .return_path .chain\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        width: 146px;\n    }\n\n\n    .item .return_path .chain .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n        padding: 2px;\n\n        border-radius: 50%;\n        background: #000;\n    }\n\n\n    .item .return_path .chain .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n    }\n\n\n    .item .return_path .chain span\n    {\n        overflow: hidden;\n\n        width: calc(100% - 32px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .item .return_path .arrow\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 36px;\n        height: 36px;\n    }\n\n\n    .item .return_path .arrow svg\n    {\n        display: block;\n\n        width: 19px;\n        height: 18px;\n    }\n\n\n    .item .return_path .status\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        width: 106px;\n    }\n\n\n    .item .return_path .status .green\n    {\n        color: #30b900;\n    }\n\n    .item .return_path .status .yellow\n    {\n        color: #fbd300;\n    }\n\n    .item .return_path .status .red\n    {\n        color: #fb0000;\n    }\n\n\n    .item .return_path .send_btn\n    {\n        font-size: 12px;\n        font-weight: 600;\n        line-height: 110%;\n\n        display: block;\n\n        width: 72px;\n        height: 24px;\n\n        border: 2px solid #762cb9;\n        border-radius: 38px;\n        background: linear-gradient(329deg, #762cb9 -28.05%, #8425da 32.19%, #b96bff 90.69%);\n    }\n\n\n    .item .return_path .send_btn:disabled\n    {\n        pointer-events: none;\n\n        opacity: .2;\n    }\n\n\n    .empty\n    {\n        text-align: center;\n\n        color: #cecece;\n    }\n</style>","import script from \"./IBCRoute.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IBCRoute.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./IBCRoute.vue?vue&type=style&index=0&id=55707bc7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-55707bc7\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","route","useRoute","loading","ref","copy","isSupported","useClipboard","async","getPaths","balances","forEach","balance","return_path","denom_traces","path","push","chain_name","networks","IBC","IBCRouteCurrentNetwork","name","item","match","data","channel","split","fetch","lcd_api","then","response","json","result","connection","connection_hops","status","chain_id","identified_client_state","client_state","chainName","chains","find","el","pretty_name","onBeforeMount","currentService","params","network","initApp","value","watch","computed","currentNetwork"],"sourceRoot":""}