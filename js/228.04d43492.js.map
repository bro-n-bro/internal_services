{"version":3,"file":"js/228.04d43492.js","mappings":"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","sources":["webpack://bro_inner/./src/components/Loader.vue","webpack://bro_inner/./src/components/Loader.vue?b8fd","webpack://bro_inner/./src/components/ChooseNetwork.vue","webpack://bro_inner/./src/components/ChooseNetwork.vue?1935","webpack://bro_inner/./src/views/MultisendForm.vue","webpack://bro_inner/./src/views/MultisendForm.vue?1c51","webpack://bro_inner/./src/assets/ sync ^\\.\\/.*_logo\\.png$"],"sourcesContent":["<template>\n    <div class=\"loader_wrap\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        background: rgba(0, 0, 0, .65);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=733e33a2\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=733e33a2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"choose_network\" ref=\"target\">\n        <button class=\"btn\" @click.prevent=\"showDropdown = !showDropdown\">\n            <div class=\"logo\">\n                <img :src=\"getLogoSrc(store.networks[store.currentNetwork].alias)\" alt=\"\">\n            </div>\n\n            <div>\n                <div class=\"name\">{{ store.networks[store.currentNetwork].name }}</div>\n                <div class=\"token\">{{ store.networks[store.currentNetwork].token_name }}</div>\n            </div>\n\n            <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n        </button>\n\n\n        <div class=\"mini_modal\" v-show=\"showDropdown\">\n            <div class=\"scroll\">\n                <div v-for=\"(network, index) in store.networks\" :key=\"index\">\n                    <router-link class=\"network\" :class=\"{ active: store.currentNetwork == network.alias }\"\n                        :to=\"`/multisend/${network.alias}`\"\n                        @click=\"showDropdown = !showDropdown\"\n                    >\n                        <div class=\"logo\">\n                            <img :src=\"getLogoSrc(network.alias)\" alt=\"\">\n                        </div>\n\n                        <div>\n                            <div class=\"name\">{{ network.name }}</div>\n                            <div class=\"token\">{{ network.token_name }}</div>\n                        </div>\n\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                    </router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { onClickOutside } from '@vueuse/core'\n\n\n    const store = useGlobalStore(),\n        showDropdown = ref(false),\n        target = ref(null)\n\n\n    // Get logo\n    function getLogoSrc(alias) {\n        return require(`@/assets/${alias}_logo.png`)\n    }\n\n\n    // Click outside\n    onClickOutside(target, e => showDropdown.value = false)\n</script>\n\n\n<style>\n    .choose_network\n    {\n        position: relative;\n        z-index: 9;\n\n        width: 264px;\n        max-width: 100%;\n    }\n\n\n    .choose_network .btn\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        height: 60px;\n        padding: 9px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border: 1px solid transparent;\n        border-radius: 14px;\n        background: #141414;\n    }\n\n\n    .choose_network .btn .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n        margin-right: 14px;\n\n        border-radius: 50%;\n    }\n\n    .choose_network .btn .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .choose_network .btn .logo + *\n    {\n        width: calc(100% - 92px);\n    }\n\n\n    .choose_network .btn .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n    }\n\n\n    .choose_network .btn .token\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n\n        color: #555;\n    }\n\n\n    .choose_network .btn .arr\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 14px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .choose_network .btn:hover\n    {\n        background: #353535;\n    }\n\n    .choose_network .btn.active\n    {\n        border-color: #950fff;\n        background: #141414;\n    }\n\n    .choose_network .btn.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n\n\n    .choose_network .mini_modal\n    {\n        position: absolute;\n        top: 100%;\n        left: 0;\n\n        width: 100%;\n        margin-top: 4px;\n        padding: 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n\n    .choose_network .mini_modal .scroll\n    {\n        overflow: auto;\n\n        max-height: 257px;\n        padding-right: 4px;\n\n        overscroll-behavior-y: contain;\n    }\n\n    .choose_network .mini_modal .scroll::-webkit-scrollbar\n    {\n        width: 5px;\n        height: 5px;\n    }\n\n    .choose_network .mini_modal .scroll > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .choose_network .network\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        padding: 4px 10px 4px 4px;\n\n        transition: background .2s linear;\n        text-align: left;\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 8px;\n    }\n\n\n    .choose_network .network .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 6px;\n\n        border-radius: 50%;\n    }\n\n    .choose_network .network .logo + *\n    {\n        width: calc(100% - 66px);\n    }\n\n\n    .choose_network .network .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .choose_network .network .name\n    {\n        line-height: 100%;\n    }\n\n\n    .choose_network .network .token\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n\n        color: #555;\n    }\n\n\n    .choose_network .network .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 6px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .choose_network .network:hover,\n    .choose_network .network.active\n    {\n        background: #191919;\n    }\n\n    .choose_network .network.active .icon\n    {\n        opacity: 1;\n    }\n\n\n    header .choose_network .mini_modal .scroll\n    {\n        max-height: calc(100vh - 134px);\n    }\n\n\n\n    @media print, (max-width: 767px)\n    {\n        .choose_network\n        {\n            width: 224px;\n        }\n\n\n        .choose_network .btn .name\n        {\n            font-size: 16px;\n        }\n    }\n\n\n\n    @media print, (max-width: 479px)\n    {\n        .choose_network\n        {\n            margin-top: 20px;\n        }\n\n\n        header .choose_network\n        {\n            width: 100%;\n        }\n    }\n\n</style>","import script from \"./ChooseNetwork.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChooseNetwork.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChooseNetwork.vue?vue&type=style&index=0&id=11df5af5&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"page_head\">\n        <div class=\"page_title\">\n            {{ $t('message.multisend_form_page_title', { network : store.networks[store.currentNetwork].name }) }}\n        </div>\n\n        <!-- Choose network -->\n        <ChooseNetwork />\n    </div>\n\n    <Loader v-if=\"loading\" />\n\n    <form v-else action=\"\" class=\"form\" @submit.prevent=\"onSubmit()\">\n        <div class=\"item\" v-for=\"(item, itemIndex) in data\" :key=\"itemIndex\">\n            <button type=\"button\" class=\"delete_btn\" v-if=\"itemIndex\" @click=\"deleteItem(itemIndex)\">\n                <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n            </button>\n\n            <div class=\"line\">\n                <div class=\"label\">\n                    {{ $t('message.multisend_form_to_address_label') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" v-model=\"item.address\" class=\"input\" @input=\"validateAddress($event, itemIndex)\">\n                </div>\n            </div>\n\n            <div class=\"columns\" v-for=\"(coin, coinIndex) in item.coins\" :key=\"coinIndex\">\n                <div class=\"line from\">\n                    <div class=\"label\">\n                        {{ $t('message.multisend_form_from_label') }}\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" v-model=\"coin.denom\" class=\"input\" @focus.self=\"showDropdown($event)\">\n\n                        <div class=\"arr\">\n                            <svg><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n                        </div>\n\n                        <div class=\"dropdown\">\n                            <div class=\"scroll\">\n                                <div v-for=\"(balance, balanceIndex) in store.balances\" :key=\"balanceIndex\">\n                                    <button type=\"button\" class=\"btn\" @click.prevent=\"setDenom(itemIndex, coinIndex, balance.denom)\">\n                                        <div class=\"denom\">{{ formatTokenName(balance.base_denom) }}</div>\n\n                                        <div class=\"amount\">{{ formatTokenAmount(balance.amount, balance.base_denom) }}</div>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"line amount\">\n                    <div class=\"label\">\n                        {{ $t('message.multisend_form_amount_label') }}\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" v-model=\"coin.amount\" class=\"input\" @input=\"setAmount($event, itemIndex, coinIndex)\" placeholder=\"0\">\n\n                        <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMaxAmount(itemIndex, coinIndex)\">\n                            {{ $t('message.btn_max') }}\n                        </button>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"add_btn\" v-if=\"!coinIndex\" @click=\"addCoinToItem(itemIndex)\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <button type=\"button\" class=\"delete_btn\" v-if=\"coinIndex\" @click=\"deleteCoinInItem(itemIndex, coinIndex)\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n            </div>\n        </div>\n\n\n        <div class=\"line add_items\">\n            <input type=\"number\" v-model=\"add_amount\" class=\"input\">\n\n            <button type=\"button\" class=\"btn\" @click=\"addItems()\">\n                {{ $t('message.btn_add') }}\n            </button>\n        </div>\n\n\n        <div class=\"submit\">\n            <button type=\"submit\" class=\"btn submit_btn\">\n                {{ $t('message.btn_send') }}\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { reactive, ref, onBeforeMount, onMounted, onBeforeUnmount, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { formatTokenAmount, formatTokenName, prepareTx, sendTx } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import ChooseNetwork  from '@/components/ChooseNetwork.vue'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        loading = ref(true),\n        add_amount = ref(1),\n        data = reactive([\n            {\n                address: '',\n                coins: [{\n                    amount: '',\n                    denom: store.networks[store.currentNetwork].denom\n                }]\n            },\n        ])\n\n\n    onBeforeMount(async () => {\n        // Init APP\n        if (!store.isKeplrConnected) {\n            await store.initApp()\n        }\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    onMounted(() => {\n        document.addEventListener('click', handleClickOutside)\n    })\n\n\n    onBeforeUnmount(() => {\n        document.removeEventListener('click', handleClickOutside)\n    })\n\n\n    // Validate address\n    function validateAddress(e, itemindex) {\n        let address = data[itemindex].address,\n            isStartsWith = address.startsWith(store.networks[store.currentNetwork].prefix)\n\n        isStartsWith\n            ? e.target.classList.remove('error')\n            : e.target.classList.add('error')\n    }\n\n\n    // Set amount\n    function setAmount(e, itemindex, coinIndex) {\n        let used = 0,\n            balance = store.balances.find(el => el.denom == data[itemindex].coins[coinIndex].denom)\n\n        // Calc total used\n        data.forEach((item, itemI) => {\n            item.coins.forEach((coin, coinI) => {\n                if (itemindex == itemI && coinIndex == coinI) {} else {\n                    if (coin.denom == data[itemindex].coins[coinIndex].denom && coin.amount.length) {\n                        used += parseFloat(coin.amount)\n                    }\n                }\n            })\n        })\n\n        // Set amount\n        if (parseFloat(e.target.value.replace(',', '.')) > (balance.amount - used)) {\n            data[itemindex].coins[coinIndex].amount = (balance.amount - used).toString()\n        }\n\n        if (e.target.value < 0) {\n            data[itemindex].coins[coinIndex].amount = ''\n        }\n    }\n\n\n    // Set max. amount\n    function setMaxAmount(itemindex, coinIndex) {\n        let used = 0,\n            balance = store.balances.find(el => el.denom == data[itemindex].coins[coinIndex].denom)\n\n        // Calc total used\n        data.forEach((item, itemI) => {\n            item.coins.forEach((coin, coinI) => {\n                if (itemindex == itemI && coinIndex == coinI) {} else {\n                    if (coin.denom == data[itemindex].coins[coinIndex].denom && coin.amount.length) {\n                        used += parseFloat(coin.amount)\n                    }\n                }\n            })\n        })\n\n        // Set amount\n        data[itemindex].coins[coinIndex].amount = (balance.amount - used).toString()\n    }\n\n\n    // Set denom\n    function setDenom(itemindex, coinIndex, denom) {\n        data[itemindex].coins[coinIndex].denom = denom\n        data[itemindex].coins[coinIndex].amount = ''\n\n        // Hide dropdown\n        hideDropdown()\n    }\n\n\n    // Add items\n    function addItems() {\n        for (var i = 0; i < add_amount.value; i++) {\n            data.push({\n                address: '',\n                coins: [{\n                    amount: '',\n                    denom: store.networks[store.currentNetwork].denom\n                }]\n            })\n        }\n    }\n\n\n    // Delete item\n    function deleteItem(itemindex) {\n        data.splice(itemindex, 1)\n    }\n\n\n    // Add coin to item\n    function addCoinToItem(itemindex) {\n        data[itemindex].coins.push({\n            amount: '',\n            denom: store.networks[store.currentNetwork].denom\n        })\n    }\n\n\n    // Delete coin in item\n    function deleteCoinInItem(itemindex, coinIndex) {\n        data[itemindex].coins.splice(coinIndex, 1)\n    }\n\n\n    // Show dropdown\n    function showDropdown(e) {\n        hideDropdown()\n\n        e.target.classList.add('active')\n    }\n\n\n    // Hide dropdown\n    function hideDropdown() {\n        let inputs = document.querySelectorAll('.from .input')\n\n        inputs.forEach(input => input.classList.remove('active'))\n    }\n\n\n    // Click outside dropdown\n    function handleClickOutside(e) {\n        if (!e.target.closest('.from')) {\n            hideDropdown()\n        }\n    }\n\n\n    // Submit form\n    async function onSubmit() {\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_multisend_process')\n        })\n\n        try {\n            let inputs = [{\n                address: store.Keplr.account.address,\n                coins: []\n            }]\n\n            // Group inputs coins\n            data.forEach(item => {\n                item.coins.forEach(coin => {\n                    // Find denom duplicate\n                    let duplicateDenom = inputs[0].coins.find(el => el.denom == coin.denom)\n\n                    if (duplicateDenom) {\n                        // Sum amount for one denom\n                        duplicateDenom.amount = (parseFloat(duplicateDenom.amount) + parseFloat(coin.amount)).toString()\n                    } else {\n                        // Add new coin\n                        inputs[0].coins.push({\n                            amount: parseFloat(coin.amount).toString(),\n                            denom: coin.denom\n                        })\n                    }\n                })\n            })\n\n            // data.forEach(item => {\n            //     // Find address duplicate\n            //     let duplicateAddress = outputs.find(el => el.address == item.to)\n\n            //     if (duplicateAddress) {\n            //         // Find denom duplicate in one adress\n            //         let duplicateDenom = duplicateAddress.coins.find(el => el.denom == item.from)\n\n            //         if (duplicateDenom) {\n            //             // Sum amount for one denom\n            //             duplicateDenom.amount = (parseFloat(duplicateDenom.amount) + parseFloat(item.amount)).toString()\n            //         } else {\n            //             // Add new denom\n            //             duplicateAddress.coins.push({\n            //                 amount: parseFloat(item.amount).toString(),\n            //                 denom: item.from\n            //             })\n            //         }\n            //     } else {\n            //         // Push new output\n            //         outputs.push({\n            //             address: item.to,\n            //             coins: [{\n            //                 amount: parseFloat(item.amount).toString(),\n            //                 denom: item.from\n            //             }]\n            //         })\n            //     }\n            // })\n\n            // Message\n            let msgAny = {\n                typeUrl: '/cosmos.bank.v1beta1.MsgMultiSend',\n                value: {\n                    inputs,\n                    outputs: data\n                    // inputs: [\n                    //     {\n                    //         address: 'cosmos1smtqmvpaa8tp7ykeafm3h39grla54maw4nx935',\n                    //         coins: [{\n                    //             amount: '100000',\n                    //             denom: 'ibc/03D28CFE7A878F122AB9727064E916B12FB88AFEC7CFF0DCBD1F9028399EB06F'\n                    //         }]\n                    //     }\n                    // ],\n                    // outputs: [\n                    //     {\n                    //         address: 'cosmos15p6m8taywua86afxqwu25fx9wu3mpx0dal70kr',\n                    //         coins: [{\n                    //             amount: '50000',\n                    //             denom: 'ibc/03D28CFE7A878F122AB9727064E916B12FB88AFEC7CFF0DCBD1F9028399EB06F'\n                    //         }]\n                    //     },\n                    //     {\n                    //         address: 'cosmos1v6ru37qy2xka5nt6rmmtdcs4tzwane0kw03k3s',\n                    //         coins: [{\n                    //             amount: '50000',\n                    //             denom: 'ibc/03D28CFE7A878F122AB9727064E916B12FB88AFEC7CFF0DCBD1F9028399EB06F'\n                    //         }]\n                    //     }\n                    // ]\n                }\n            }\n\n            // Prepare Tx\n            let prepareResult = await prepareTx([msgAny], true, store.currentNetwork)\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_multisend_success_title'),\n                    type: 'success',\n                    data: {\n                        chain: store.networks[store.currentNetwork].name,\n                        tx_type: i18n.global.t('message.notification_multisend_action'),\n                        tx_hash: result.transactionHash\n                    }\n                })\n\n                // Reinit APP\n                if (!store.isKeplrConnected) {\n                    await store.initApp()\n                }\n            } else {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: i18n.global.t('message.notification_tx_error_rejected'),\n                    type: 'error',\n                    data: {\n                        chain: store.networks[store.currentNetwork].name,\n                        tx_type: i18n.global.t('message.notification_multisend_action')\n                    }\n                })\n            }\n        } catch (error) {\n            console.error(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.notification_tx_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: store.networks[store.currentNetwork].name,\n                    tx_type: i18n.global.t('message.notification_multisend_action')\n                }\n            })\n        }\n    }\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        padding: 40px;\n\n        background: none;\n    }\n\n\n    .item\n    {\n        position: relative;\n\n        padding-right: 52px;\n    }\n\n    .item + .item\n    {\n        margin-top: 20px;\n        padding-top: 40px;\n\n        border-top: 1px solid rgba(255,255,255,.1);\n    }\n\n\n    .item .columns\n    {\n        position: relative;\n\n        padding-right: 52px;\n        padding-left: 20%;\n    }\n\n\n    .add_btn,\n    .delete_btn\n    {\n        position: absolute;\n        top: 36px;\n        right: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 32px;\n        height: 32px;\n        margin-left: 20px;\n\n        transition: .2s linear;\n\n        border: 1px solid #950fff;\n        border-radius: 50%;\n    }\n\n    .item + .item > .delete_btn\n    {\n        top: 76px;\n    }\n\n    .item .columns .delete_btn\n    {\n        border: none;\n    }\n\n\n    .add_btn svg,\n    .delete_btn svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n    .add_btn svg\n    {\n        transform: rotate(45deg);\n    }\n\n\n    .add_btn:hover,\n    .delete_btn:hover\n    {\n        background: #950fff;\n    }\n</style>","import script from \"./MultisendForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MultisendForm.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MultisendForm.vue?vue&type=style&index=0&id=2002056c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2002056c\"]])\n\nexport default __exports__","var map = {\n\t\"./cosmoshub_logo.png\": 45781\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11123;"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","showDropdown","ref","target","getLogoSrc","alias","require","onClickOutside","e","value","i18n","inject","notification","useNotification","loading","add_amount","data","reactive","address","coins","amount","denom","networks","currentNetwork","validateAddress","itemindex","isStartsWith","startsWith","prefix","classList","remove","add","setAmount","coinIndex","used","balance","balances","find","el","forEach","item","itemI","coin","coinI","length","parseFloat","replace","toString","setMaxAmount","setDenom","hideDropdown","addItems","i","push","deleteItem","splice","addCoinToItem","deleteCoinInItem","inputs","document","querySelectorAll","input","handleClickOutside","closest","async","onSubmit","notify","group","duration","title","global","t","Keplr","account","duplicateDenom","msgAny","typeUrl","outputs","prepareResult","prepareTx","result","sendTx","code","clean","type","chain","name","tx_type","tx_hash","transactionHash","isKeplrConnected","initApp","text","error","console","onBeforeMount","onMounted","addEventListener","onBeforeUnmount","removeEventListener","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"sourceRoot":""}