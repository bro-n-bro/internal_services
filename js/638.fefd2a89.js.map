{"version":3,"file":"js/638.fefd2a89.js","mappings":"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","sources":["webpack://bro_inner/./src/components/Loader.vue","webpack://bro_inner/./src/components/Loader.vue?b8fd","webpack://bro_inner/./src/components/ChooseNetwork.vue","webpack://bro_inner/./src/components/ChooseNetwork.vue?1935","webpack://bro_inner/./src/views/MultisendForm.vue","webpack://bro_inner/./src/views/MultisendForm.vue?1c51"],"sourcesContent":["<template>\n    <div class=\"loader_wrap\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        background: rgba(0, 0, 0, .65);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=733e33a2\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=733e33a2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"choose_network\" ref=\"target\">\n        <button class=\"btn\" @click.prevent=\"showDropdown = !showDropdown\">\n            <div class=\"logo\">\n                <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].alias)\" alt=\"\">\n            </div>\n\n            <div>\n                <div class=\"name\">{{ store.networks[store.currentNetwork].name }}</div>\n                <div class=\"token\">{{ store.networks[store.currentNetwork].token_name }}</div>\n            </div>\n\n            <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n        </button>\n\n\n        <div class=\"mini_modal\" v-show=\"showDropdown\">\n            <div class=\"scroll\">\n                <div v-for=\"(network, index) in store.networks\" :key=\"index\">\n                    <router-link class=\"network\" :class=\"{ active: store.currentNetwork == network.alias }\"\n                        :to=\"`/multisend/${network.alias}`\"\n                        @click=\"showDropdown = !showDropdown\"\n                    >\n                        <div class=\"logo\">\n                            <img :src=\"getNetworkLogo(network.alias)\" alt=\"\">\n                        </div>\n\n                        <div>\n                            <div class=\"name\">{{ network.name }}</div>\n                            <div class=\"token\">{{ network.token_name }}</div>\n                        </div>\n\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                    </router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { onClickOutside } from '@vueuse/core'\n    import { getNetworkLogo } from '@/utils'\n\n\n    const store = useGlobalStore(),\n        showDropdown = ref(false),\n        target = ref(null)\n\n\n    // Click outside\n    onClickOutside(target, e => showDropdown.value = false)\n</script>\n\n\n<style>\n    .choose_network\n    {\n        position: relative;\n        z-index: 9;\n\n        width: 264px;\n        max-width: 100%;\n    }\n\n\n    .choose_network .btn\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        height: 60px;\n        padding: 9px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border: 1px solid transparent;\n        border-radius: 14px;\n        background: #141414;\n    }\n\n\n    .choose_network .btn .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n        margin-right: 14px;\n\n        border-radius: 50%;\n    }\n\n    .choose_network .btn .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .choose_network .btn .logo + *\n    {\n        width: calc(100% - 92px);\n    }\n\n\n    .choose_network .btn .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n    }\n\n\n    .choose_network .btn .token\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n\n        color: #555;\n    }\n\n\n    .choose_network .btn .arr\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 14px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .choose_network .btn:hover\n    {\n        background: #353535;\n    }\n\n    .choose_network .btn.active\n    {\n        border-color: #950fff;\n        background: #141414;\n    }\n\n    .choose_network .btn.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n\n\n    .choose_network .mini_modal\n    {\n        position: absolute;\n        top: 100%;\n        left: 0;\n\n        width: 100%;\n        margin-top: 4px;\n        padding: 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n\n    .choose_network .mini_modal .scroll\n    {\n        overflow: auto;\n\n        max-height: 257px;\n        padding-right: 4px;\n\n        overscroll-behavior-y: contain;\n    }\n\n    .choose_network .mini_modal .scroll::-webkit-scrollbar\n    {\n        width: 5px;\n        height: 5px;\n    }\n\n    .choose_network .mini_modal .scroll > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .choose_network .network\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        padding: 4px 10px 4px 4px;\n\n        transition: background .2s linear;\n        text-align: left;\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 8px;\n    }\n\n\n    .choose_network .network .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 6px;\n\n        border-radius: 50%;\n    }\n\n    .choose_network .network .logo + *\n    {\n        width: calc(100% - 66px);\n    }\n\n\n    .choose_network .network .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .choose_network .network .name\n    {\n        line-height: 100%;\n    }\n\n\n    .choose_network .network .token\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n\n        color: #555;\n    }\n\n\n    .choose_network .network .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 6px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .choose_network .network:hover,\n    .choose_network .network.active\n    {\n        background: #191919;\n    }\n\n    .choose_network .network.active .icon\n    {\n        opacity: 1;\n    }\n\n\n    header .choose_network .mini_modal .scroll\n    {\n        max-height: calc(100vh - 134px);\n    }\n\n\n\n    @media print, (max-width: 767px)\n    {\n        .choose_network\n        {\n            width: 224px;\n        }\n\n\n        .choose_network .btn .name\n        {\n            font-size: 16px;\n        }\n    }\n\n\n\n    @media print, (max-width: 479px)\n    {\n        .choose_network\n        {\n            margin-top: 20px;\n        }\n\n\n        header .choose_network\n        {\n            width: 100%;\n        }\n    }\n\n</style>","import script from \"./ChooseNetwork.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChooseNetwork.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChooseNetwork.vue?vue&type=style&index=0&id=7f28c49c&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"page_head\">\n        <div class=\"page_title\">\n            {{ $t('message.multisend_form_page_title', { network : store.networks[store.currentNetwork].name }) }}\n        </div>\n\n        <!-- Choose network -->\n        <ChooseNetwork />\n    </div>\n\n    <Loader v-if=\"loading\" />\n\n    <form v-else action=\"\" class=\"form\" :class=\"{ processing: processing }\" @submit.prevent=\"onSubmit()\">\n        <div class=\"item\" v-for=\"(item, itemIndex) in data\" :key=\"itemIndex\">\n            <button type=\"button\" class=\"delete_btn\" v-if=\"itemIndex\" @click=\"deleteItem(itemIndex)\">\n                <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n            </button>\n\n            <div class=\"line\">\n                <div class=\"label\">\n                    {{ $t('message.multisend_form_to_address_label') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" v-model=\"item.address\" class=\"input\" @input=\"validateAddress($event, itemIndex)\">\n                </div>\n            </div>\n\n            <div class=\"columns\" v-for=\"(coin, coinIndex) in item.coins\" :key=\"coinIndex\">\n                <div class=\"line from\">\n                    <div class=\"label\">\n                        {{ $t('message.multisend_form_from_label') }}\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" v-model=\"coin.denom\" class=\"input\" @focus.self=\"showDropdown($event)\">\n\n                        <div class=\"arr\">\n                            <svg><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n                        </div>\n\n                        <div class=\"dropdown\">\n                            <div class=\"scroll\">\n                                <div v-for=\"(balance, balanceIndex) in store.balances\" :key=\"balanceIndex\">\n                                    <button type=\"button\" class=\"btn\" @click.prevent=\"setDenom(itemIndex, coinIndex, balance.denom)\">\n                                        <div class=\"denom\">{{ formatTokenName(balance.base_denom) }}</div>\n\n                                        <div class=\"amount\">{{ formatTokenAmount(balance.amount, balance.base_denom) }}</div>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"line amount\">\n                    <div class=\"label\">\n                        {{ $t('message.multisend_form_amount_label') }}\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" v-model=\"coin.amount\" class=\"input\" @input=\"setAmount($event, itemIndex, coinIndex)\" :placeholder=\"coin.placeholder ? coin.placeholder : 0\" :disabled=\"!coin.denom.length\">\n\n                        <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMaxAmount(itemIndex, coinIndex)\" :disabled=\"!coin.denom.length\">\n                            {{ $t('message.btn_max') }}\n                        </button>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"add_btn\" v-if=\"!coinIndex\" @click=\"addCoinToItem(itemIndex)\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <button type=\"button\" class=\"delete_btn\" v-if=\"coinIndex\" @click=\"deleteCoinInItem(itemIndex, coinIndex)\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n            </div>\n        </div>\n\n\n        <div class=\"line add_items\">\n            <input type=\"number\" v-model=\"add_amount\" class=\"input\">\n\n            <button type=\"button\" class=\"btn\" @click=\"addItems()\">\n                {{ $t('message.btn_add') }}\n            </button>\n        </div>\n\n\n        <div class=\"submit\">\n            <button type=\"submit\" class=\"btn submit_btn\">\n                {{ $t('message.btn_send') }}\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { reactive, ref, onBeforeMount, onMounted, onBeforeUnmount, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { formatTokenAmount, formatTokenName, prepareTx, sendTx } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import ChooseNetwork  from '@/components/ChooseNetwork.vue'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        loading = ref(true),\n        processing = ref(false),\n        add_amount = ref(1),\n        data = reactive([\n            {\n                address: '',\n                coins: [{\n                    amount: '',\n                    denom: ''\n                }]\n            },\n        ])\n\n\n    onBeforeMount(async () => {\n        // Init APP\n        if (!store.isKeplrConnected) {\n            await store.initApp()\n        }\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    onMounted(() => {\n        document.addEventListener('click', handleClickOutside)\n    })\n\n\n    onBeforeUnmount(() => {\n        document.removeEventListener('click', handleClickOutside)\n    })\n\n\n    // Validate address\n    function validateAddress(e, itemindex) {\n        let address = data[itemindex].address,\n            isStartsWith = address.startsWith(store.networks[store.currentNetwork].prefix)\n\n        isStartsWith\n            ? e.target.classList.remove('error')\n            : e.target.classList.add('error')\n    }\n\n\n    // Set amount\n    function setAmount(e, itemindex, coinIndex) {\n        // Coin balance\n        let balance = store.balances.find(el => el.denom == data[itemindex].coins[coinIndex].denom)\n\n        // Calc total used coins\n        let used = calcTotalUsedCoins(itemindex, coinIndex)\n\n        // Set amount\n        if (parseFloat(e.target.value.replace(',', '.')) > (balance.amount - used)) {\n            data[itemindex].coins[coinIndex].amount = (balance.amount - used).toString()\n        }\n\n        if (e.target.value < 0) {\n            data[itemindex].coins[coinIndex].amount = ''\n        }\n    }\n\n\n    // Set max. amount\n    function setMaxAmount(itemindex, coinIndex) {\n        // Coin balance\n        let balance = store.balances.find(el => el.denom == data[itemindex].coins[coinIndex].denom)\n\n        // Calc total used coins\n        let used = calcTotalUsedCoins(itemindex, coinIndex)\n\n        // Set amount\n        data[itemindex].coins[coinIndex].amount = (balance.amount - used).toString()\n    }\n\n\n    // Calc total used coins\n    function calcTotalUsedCoins(itemindex, coinIndex) {\n        let used = 0\n\n        // Calc total used\n        data.forEach((item, itemI) => {\n            item.coins.forEach((coin, coinI) => {\n                if (itemindex == itemI && coinIndex == coinI) {} else {\n                    if (coin.amount.length) {\n                        used += parseFloat(coin.amount)\n                    }\n                }\n            })\n        })\n\n        return used\n    }\n\n\n    // Set denom\n    function setDenom(itemindex, coinIndex, denom) {\n        // Coin balance\n        let balance = store.balances.find(el => el.denom == denom)\n\n        // Calc total used coins\n        let used = calcTotalUsedCoins(itemindex, coinIndex)\n\n        // Set data\n        data[itemindex].coins[coinIndex].denom = denom\n        data[itemindex].coins[coinIndex].amount = ''\n        data[itemindex].coins[coinIndex].placeholder = (balance.amount - used)\n\n        // Hide dropdown\n        hideDropdown()\n    }\n\n\n    // Add items\n    function addItems() {\n        for (var i = 0; i < add_amount.value; i++) {\n            data.push({\n                address: '',\n                coins: [{\n                    amount: '',\n                    denom: ''\n                }]\n            })\n        }\n    }\n\n\n    // Delete item\n    function deleteItem(itemindex) {\n        data.splice(itemindex, 1)\n    }\n\n\n    // Add coin to item\n    function addCoinToItem(itemindex) {\n        data[itemindex].coins.push({\n            amount: '',\n            denom: ''\n        })\n    }\n\n\n    // Delete coin in item\n    function deleteCoinInItem(itemindex, coinIndex) {\n        data[itemindex].coins.splice(coinIndex, 1)\n    }\n\n\n    // Show dropdown\n    function showDropdown(e) {\n        hideDropdown()\n\n        e.target.classList.add('active')\n    }\n\n\n    // Hide dropdown\n    function hideDropdown() {\n        let inputs = document.querySelectorAll('.from .input')\n\n        inputs.forEach(input => input.classList.remove('active'))\n    }\n\n\n    // Click outside dropdown\n    function handleClickOutside(e) {\n        if (!e.target.closest('.from')) {\n            hideDropdown()\n        }\n    }\n\n\n    // Submit form\n    async function onSubmit() {\n        // Set processing\n        processing.value = true\n\n        if (validateData()) {\n            // Show tx processing notifications\n            notification.notify({\n                group: 'default',\n                duration: -100,\n                title: i18n.global.t('message.notification_multisend_process')\n            })\n\n            try {\n                let inputs = [{\n                    address: store.Keplr.account.address,\n                    coins: []\n                }]\n\n                // Group inputs coins\n                data.forEach(item => {\n                    item.coins.forEach(coin => {\n                        // Find denom duplicate\n                        let duplicateDenom = inputs[0].coins.find(el => el.denom == coin.denom)\n\n                        if (duplicateDenom) {\n                            // Sum amount for one denom\n                            duplicateDenom.amount = (parseFloat(duplicateDenom.amount) + parseFloat(coin.amount)).toString()\n                        } else {\n                            // Add new coin\n                            inputs[0].coins.push({\n                                amount: parseFloat(coin.amount).toString(),\n                                denom: coin.denom\n                            })\n                        }\n                    })\n                })\n\n                // Message\n                let msgAny = {\n                    typeUrl: '/cosmos.bank.v1beta1.MsgMultiSend',\n                    value: {\n                        inputs,\n                        outputs: data\n                    }\n                }\n\n                // Prepare Tx\n                let prepareResult = await prepareTx([msgAny], true, store.currentNetwork)\n\n                // Send Tx\n                let result = await sendTx(prepareResult)\n\n                if (result.code === 0) {\n                    // Show notification\n                    notification.notify({\n                        group: 'default',\n                        clean: true\n                    })\n\n                    notification.notify({\n                        group: 'default',\n                        title: i18n.global.t('message.notification_multisend_success_title'),\n                        type: 'success',\n                        data: {\n                            chain: store.networks[store.currentNetwork].name,\n                            tx_type: i18n.global.t('message.notification_multisend_action'),\n                            tx_hash: result.transactionHash\n                        }\n                    })\n\n                    // Reinit APP\n                    if (!store.isKeplrConnected) {\n                        await store.initApp()\n                    }\n                } else {\n                    // Show error\n                    showError(error)\n                }\n            } catch (error) {\n                console.error(error)\n\n                // Show error\n                showError(error)\n            }\n        } else {\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_failed_validate_title'),\n                text: i18n.global.t('message.notification_failed_validate_desc'),\n                type: 'error',\n                data: {\n                    chain: store.networks[store.currentNetwork].name\n                }\n            })\n        }\n\n        // Set processing\n        processing.value = false\n    }\n\n\n    // Show error message\n    function showError(error) {\n        // Get error code\n        let errorCode = error.message.match(/code (\\d+(\\.\\d)*)/i),\n            errorText = ''\n\n        // Get error title\n        errorCode\n            ? errorText = i18n.global.t(`message.notification_tx_error_${errorCode[1]}`)\n            : errorText = i18n.global.t('message.notification_tx_error_rejected')\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        notification.notify({\n            group: 'default',\n            title: i18n.global.t('message.notification_failed_title'),\n            text: errorText,\n            type: 'error',\n            data: {\n                chain: store.networks[store.currentNetwork].name,\n                tx_type: i18n.global.t('message.notification_multisend_action')\n            }\n        })\n    }\n\n\n    // Validate data\n    function validateData() {\n        let result = true\n\n        data.forEach(item => {\n            // Check address inputs\n            if (!item.address.length) {\n                result = false\n\n                return result\n            }\n\n            item.coins.forEach(coin => {\n                // Check coins denom\n                if (!coin.denom.length) {\n                    result = false\n\n                    return result\n                }\n\n                // Check coins amount\n                if (!coin.amount.length || coin.amount == '0') {\n                    result = false\n\n                    return result\n                }\n            })\n        })\n\n        return result\n    }\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        padding: 40px;\n\n        background: none;\n    }\n\n\n    .item\n    {\n        position: relative;\n\n        padding-right: 52px;\n    }\n\n    .item + .item\n    {\n        margin-top: 20px;\n        padding-top: 40px;\n\n        border-top: 1px solid rgba(255,255,255,.1);\n    }\n\n\n    .item .columns\n    {\n        position: relative;\n\n        padding-right: 52px;\n        padding-left: 20%;\n    }\n\n\n    .add_btn,\n    .delete_btn\n    {\n        position: absolute;\n        top: 36px;\n        right: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 32px;\n        height: 32px;\n        margin-left: 20px;\n\n        transition: .2s linear;\n\n        border: 1px solid #950fff;\n        border-radius: 50%;\n    }\n\n    .item + .item > .delete_btn\n    {\n        top: 76px;\n    }\n\n    .item .columns .delete_btn\n    {\n        border: none;\n    }\n\n\n    .add_btn svg,\n    .delete_btn svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n    .add_btn svg\n    {\n        transform: rotate(45deg);\n    }\n\n\n    .add_btn:hover,\n    .delete_btn:hover\n    {\n        background: #950fff;\n    }\n</style>","import script from \"./MultisendForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MultisendForm.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MultisendForm.vue?vue&type=style&index=0&id=5c72beb0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5c72beb0\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","showDropdown","ref","target","onClickOutside","e","value","i18n","inject","notification","useNotification","loading","processing","add_amount","data","reactive","address","coins","amount","denom","validateAddress","itemindex","isStartsWith","startsWith","networks","currentNetwork","prefix","classList","remove","add","setAmount","coinIndex","balance","balances","find","el","used","calcTotalUsedCoins","parseFloat","replace","toString","setMaxAmount","forEach","item","itemI","coin","coinI","length","setDenom","placeholder","hideDropdown","addItems","i","push","deleteItem","splice","addCoinToItem","deleteCoinInItem","inputs","document","querySelectorAll","input","handleClickOutside","closest","async","onSubmit","validateData","notify","group","duration","title","global","t","Keplr","account","duplicateDenom","msgAny","typeUrl","outputs","prepareResult","prepareTx","result","sendTx","code","clean","type","chain","name","tx_type","tx_hash","transactionHash","isKeplrConnected","initApp","showError","error","console","text","errorCode","message","match","errorText","onBeforeMount","onMounted","addEventListener","onBeforeUnmount","removeEventListener"],"sourceRoot":""}