{"version":3,"file":"js/594.481a75c1.js","mappings":"0LACSA,MAAM,e,GACPC,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,UAAQ,EAACC,EAAAA,EAAAA,IAAa,a,GAAjCC,G,kCADJC,EAAAA,EAAAA,IAEM,MAFNC,EADJC,E,gBCCA,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,kkBCwCI,MAAMC,GAAQC,EAAAA,EAAAA,KACVC,GAAeC,EAAAA,EAAAA,KAAI,GACnBC,GAASD,EAAAA,EAAAA,IAAI,M,OAIjBE,EAAAA,EAAAA,KAAeD,GAAQE,GAAKJ,EAAaK,OAAQ,I,yoCCjDrD,MAAMT,EAAc,EAEpB,Q,imBCuEI,MAAME,GAAQC,EAAAA,EAAAA,KACVO,GAAUL,EAAAA,EAAAA,KAAI,GAiClBM,eAAeC,IACXV,EAAMW,SAASC,SAAQH,UAInB,GAFAI,EAAQC,YAAc,GAElBD,EAAQE,aAAaC,KAAM,CAE3BH,EAAQC,YAAYG,KAAK,CACrBC,WAAYlB,EAAMmB,SAASC,IAAIpB,EAAMqB,gBAAgBC,OAGzD,IAAK,MAAMC,KAAQV,EAAQE,aAAaC,KAAKQ,MAAM,0BAA2B,CAC1E,IAAIC,EAAO,CACPT,KAAMO,EACNG,QAASH,EAAKI,MAAM,KAAK,UAIvBC,MAAO,GAAE5B,EAAMmB,SAASC,IAAIpB,EAAMqB,gBAAgBQ,wCAAwCJ,EAAKC,0BAChGI,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFR,EAAKS,WAAaD,EAAOP,QAAQS,gBAAgB,GACjDV,EAAKW,OAASH,EAAOP,QAAQW,KAAK,UAIpCT,MAAO,GAAE5B,EAAMmB,SAASC,IAAIpB,EAAMqB,gBAAgBQ,8CAA8CJ,EAAKS,2BACtGJ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAUR,EAAKa,SAAWL,EAAOM,wBAAwBC,aAAaF,WAGhF,IAAIG,EAAYC,EAAAA,GAAOC,MAAKC,GAAMA,EAAGN,WAAab,EAAKa,WAEvDb,EAAKP,WAAauB,EAAYA,EAAUI,YAAc,iBAGtDhC,EAAQC,YAAYG,KAAKQ,EAC7B,CACJ,IAER,C,OAtEAqB,EAAAA,EAAAA,KAAcrC,UAELT,EAAM+C,wBACD/C,EAAMgD,gBAIVtC,IAGNF,EAAQD,OAAQ,CAAK,KAIzB0C,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAAS,IAAMlD,EAAMqB,kBAAiBZ,UAExCD,EAAQD,OAAQ,QAGVP,EAAMgD,gBAGNtC,IAGNF,EAAQD,OAAQ,CAAK,I,kwCCrG7B,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://internal_services/./src/components/Loader.vue","webpack://internal_services/./src/components/Loader.vue?b8fd","webpack://internal_services/./src/components/ibc_route/ChooseNetwork.vue","webpack://internal_services/./src/components/ibc_route/ChooseNetwork.vue?a2b3","webpack://internal_services/./src/views/IBCRoute.vue","webpack://internal_services/./src/views/IBCRoute.vue?dac6"],"sourcesContent":["<template>\n    <div class=\"loader_wrap\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        background: rgba(0, 0, 0, .65);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=733e33a2\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=733e33a2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"choose_network\" ref=\"target\">\n        <button class=\"btn\" @click.prevent=\"showDropdown = !showDropdown\">\n            <div class=\"logo\">\n                <img :src=\"getNetworkLogo(store.networks.IBC[store.currentNetwork].chainId)\" alt=\"\">\n            </div>\n\n            <div>\n                <div class=\"name\">{{ store.networks.IBC[store.currentNetwork].name }}</div>\n                <div class=\"token\">{{ store.networks.IBC[store.currentNetwork].token_name }}</div>\n            </div>\n\n            <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n        </button>\n\n\n        <div class=\"mini_modal\" v-show=\"showDropdown\">\n            <div class=\"scroll\">\n                <div v-for=\"(network, index) in store.networks.IBC\" :key=\"index\">\n                    <router-link class=\"network\" :class=\"{ active: store.currentNetwork == network.alias }\"\n                        :to=\"`/ibc_route/${network.alias}`\"\n                        @click=\"showDropdown = !showDropdown\"\n                    >\n                        <div class=\"logo\">\n                            <img :src=\"getNetworkLogo(network.chainId)\" alt=\"\">\n                        </div>\n\n                        <div>\n                            <div class=\"name\">{{ network.name }}</div>\n                            <div class=\"token\">{{ network.token_name }}</div>\n                        </div>\n\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                    </router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { onClickOutside } from '@vueuse/core'\n    import { getNetworkLogo } from '@/utils'\n\n\n    const store = useGlobalStore(),\n        showDropdown = ref(false),\n        target = ref(null)\n\n\n    // Click outside\n    onClickOutside(target, e => showDropdown.value = false)\n</script>\n\n\n<style>\n    .choose_network\n    {\n        position: relative;\n        z-index: 9;\n\n        width: 264px;\n        max-width: 100%;\n    }\n\n\n    .choose_network .btn\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        height: 60px;\n        padding: 9px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border: 1px solid transparent;\n        border-radius: 14px;\n        background: #141414;\n    }\n\n\n    .choose_network .btn .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n        margin-right: 14px;\n\n        border-radius: 50%;\n    }\n\n    .choose_network .btn .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .choose_network .btn .logo + *\n    {\n        width: calc(100% - 92px);\n    }\n\n\n    .choose_network .btn .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .choose_network .btn .token\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n\n        color: #555;\n    }\n\n\n    .choose_network .btn .arr\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 14px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .choose_network .btn:hover\n    {\n        background: #353535;\n    }\n\n    .choose_network .btn.active\n    {\n        border-color: #950fff;\n        background: #141414;\n    }\n\n    .choose_network .btn.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n\n\n    .choose_network .mini_modal\n    {\n        position: absolute;\n        top: 100%;\n        left: 0;\n\n        width: 100%;\n        margin-top: 4px;\n        padding: 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n\n    .choose_network .mini_modal .scroll\n    {\n        overflow: auto;\n\n        max-height: 257px;\n        padding-right: 4px;\n\n        overscroll-behavior-y: contain;\n    }\n\n    .choose_network .mini_modal .scroll::-webkit-scrollbar\n    {\n        width: 5px;\n        height: 5px;\n    }\n\n    .choose_network .mini_modal .scroll > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .choose_network .network\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        padding: 4px 10px 4px 4px;\n\n        transition: background .2s linear;\n        text-align: left;\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 8px;\n    }\n\n\n    .choose_network .network .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 6px;\n\n        border-radius: 50%;\n    }\n\n    .choose_network .network .logo + *\n    {\n        width: calc(100% - 66px);\n    }\n\n\n    .choose_network .network .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .choose_network .network .name\n    {\n        line-height: 100%;\n    }\n\n\n    .choose_network .network .token\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n\n        color: #555;\n    }\n\n\n    .choose_network .network .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 6px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .choose_network .network:hover,\n    .choose_network .network.active\n    {\n        background: #191919;\n    }\n\n    .choose_network .network.active .icon\n    {\n        opacity: 1;\n    }\n\n\n    header .choose_network .mini_modal .scroll\n    {\n        max-height: calc(100vh - 134px);\n    }\n\n\n\n    @media print, (max-width: 767px)\n    {\n        .choose_network\n        {\n            width: 224px;\n        }\n\n\n        .choose_network .btn .name\n        {\n            font-size: 16px;\n        }\n    }\n\n\n\n    @media print, (max-width: 479px)\n    {\n        .choose_network\n        {\n            margin-top: 20px;\n        }\n\n\n        header .choose_network\n        {\n            width: 100%;\n        }\n    }\n\n</style>","import script from \"./ChooseNetwork.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChooseNetwork.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChooseNetwork.vue?vue&type=style&index=0&id=4dd629f6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <Loader v-if=\"loading\" />\n\n    <template v-else>\n    <div class=\"page_head\">\n        <div class=\"page_title\">\n            {{ $t('message.ibc_route_page_title') }}\n        </div>\n\n        <!-- Choose network -->\n        <ChooseNetwork />\n    </div>\n\n    <!-- <pre>{{ store.balances }}</pre> -->\n\n    <div class=\"list\" v-if=\"store.balances.length\">\n        <div class=\"item\" v-for=\"(balance, index) in store.balances\" :key=\"index\">\n            <div class=\"row\">\n                <div class=\"amount\">\n                    <template v-if=\"formatTokenAmount(balance.amount, balance.base_denom) < 0.01\">\n                    &lt; 0.01\n                    </template>\n\n                    <template v-else>\n                    {{ $filters.toFixed(formatTokenAmount(balance.amount, balance.base_denom), 2) }}\n                    </template>\n                </div>\n\n                <div class=\"denom\">{{ formatTokenName(balance.denom) }}</div>\n            </div>\n\n            <div class=\"path\">\n                <div class=\"label\">Path: </div>\n                <div class=\"val\">{{ balance.denom_traces.path }}</div>\n            </div>\n\n            <div class=\"return_path\">\n                <div class=\"title\">Return path</div>\n\n                <div v-if=\"!balance.return_path.length\">\n                    No need, it's a native token.\n                </div>\n\n                <div class=\"row\" v-else>\n                    <div v-for=\"(item, itemIndex) in balance.return_path\" :key=\"itemIndex\">\n                        <div>\n                            <div class=\"label\">Chain name:</div>\n                            <div class=\"val\">{{ item.chain_name }}</div>\n                        </div>\n\n                        <div v-if=\"item.status\">\n                            <div class=\"label\">Channel status:</div>\n                            <div class=\"val\">{{ item.status }}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"empty\" v-else>\n        {{ $t('message.ibc_empty_title') }}\n    </div>\n    </template>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount, watch, computed } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { chains } from 'chain-registry'\n    import { formatTokenAmount, formatTokenName } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import ChooseNetwork  from '@/components/ibc_route/ChooseNetwork.vue'\n\n\n    const store = useGlobalStore(),\n        loading = ref(true)\n\n\n    onBeforeMount(async () => {\n        // Init APP\n        if (!store.isKeplrConnected) {\n            await store.initApp()\n        }\n\n        // Get paths\n        await getPaths()\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    watch(computed(() => store.currentNetwork), async () => {\n        // Show loader\n        loading.value = true\n\n        // Reinit APP\n        await store.initApp()\n\n        // Get paths\n        await getPaths()\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    // Get paths\n    async function getPaths() {\n        store.balances.forEach(async balance => {\n            // Return path\n            balance.return_path = []\n\n            if (balance.denom_traces.path) {\n                // Set default network\n                balance.return_path.push({\n                    chain_name: store.networks.IBC[store.currentNetwork].name,\n                })\n\n                for (const item of balance.denom_traces.path.match(/transfer\\/channel-\\d+/g)) {\n                    let data = {\n                        path: item,\n                        channel: item.split('/')[1]\n                    }\n\n                    // Get connection\n                    await fetch(`${store.networks.IBC[store.currentNetwork].lcd_api}/ibc/core/channel/v1/channels/${data.channel}/ports/transfer`)\n                        .then(response => response.json())\n                        .then(result => {\n                            data.connection = result.channel.connection_hops[0]\n                            data.status = result.channel.state\n                        })\n\n                    // Get chain id\n                    await fetch(`${store.networks.IBC[store.currentNetwork].lcd_api}/ibc/core/connection/v1/connections/${data.connection}/client_state`)\n                        .then(response => response.json())\n                        .then(result => data.chain_id = result.identified_client_state.client_state.chain_id)\n\n                    // Get chain name\n                    let chainName = chains.find(el => el.chain_id === data.chain_id)\n\n                    data.chain_name = chainName ? chainName.pretty_name : 'Not definitely'\n\n                    // Set data\n                    balance.return_path.push(data)\n                }\n            }\n        })\n    }\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        padding: 40px;\n\n        background: none;\n    }\n\n\n    .item + .item\n    {\n        margin-top: 40px;\n    }\n\n\n    .item .amount\n    {\n        margin-bottom: 12px;\n\n        text-transform: uppercase;\n    }\n\n\n    .item .denom\n    {\n        margin-bottom: 12px;\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n    .item .path .label\n    {\n        font-size: 14px;\n\n        margin-bottom: 4px;\n\n        opacity: .5;\n    }\n\n\n    .item .return_path\n    {\n        margin-top: 16px;\n    }\n\n\n    .item .return_path .title\n    {\n        margin-bottom: 8px;\n    }\n\n\n    .item .return_path .row\n    {\n        margin-left: -60px;\n    }\n\n\n    .item .return_path .row > *\n    {\n        position: relative;\n\n        margin-left: 60px;\n    }\n\n\n    .item .return_path .row > * + *:before\n    {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: -40px;\n\n        display: block;\n\n        width: 20px;\n        height: 1px;\n        margin: auto 0;\n\n        content: '';\n        pointer-events: none;\n\n        background: currentColor;\n    }\n\n    .item .return_path .row > * + *:after\n    {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: -29px;\n\n        display: block;\n\n        width: 9px;\n        height: 9px;\n        margin: auto 0;\n\n        content: '';\n        transform: rotate(135deg);\n        pointer-events: none;\n\n        border-top: 1px solid;\n        border-left: 1px solid;\n    }\n\n\n    .item .return_path .row > * > *\n    {\n        display: flex;\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n    .item .return_path .row > * > * + *\n    {\n        margin-top: 4px;\n    }\n\n\n    .item .return_path .label\n    {\n        font-size: 14px;\n\n        align-self: center;\n\n        margin-right: 8px;\n\n        opacity: .5;\n    }\n\n\n\n    .empty\n    {\n        text-align: center;\n\n        color: #cecece;\n    }\n</style>","import script from \"./IBCRoute.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IBCRoute.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./IBCRoute.vue?vue&type=style&index=0&id=45c3548b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-45c3548b\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","showDropdown","ref","target","onClickOutside","e","value","loading","async","getPaths","balances","forEach","balance","return_path","denom_traces","path","push","chain_name","networks","IBC","currentNetwork","name","item","match","data","channel","split","fetch","lcd_api","then","response","json","result","connection","connection_hops","status","state","chain_id","identified_client_state","client_state","chainName","chains","find","el","pretty_name","onBeforeMount","isKeplrConnected","initApp","watch","computed"],"sourceRoot":""}